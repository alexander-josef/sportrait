/*
 * Sportrait Import API
 * Initial Sportrait Import API description - an API to process events and photo imports on the Sportrait Server 
 *
 * OpenAPI spec version: 0.0.1
 * Contact: info@sportrait.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sportrait.importrs.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.math.BigDecimal;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * Represents a price for a product
 */
@Schema(description = "Represents a price for a product")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaJerseyServerCodegen", date = "2020-12-27T16:10:38.199Z[GMT]")public class Price   {
  @JsonProperty("priceId")
  private Long priceId = null;

  @JsonProperty("priceCHF")
  private BigDecimal priceCHF = null;

  @JsonProperty("priceEUR")
  private BigDecimal priceEUR = null;

  @JsonProperty("comment")
  private String comment = null;

  /**
   * status of this price object (not used yet)
   */
  public enum StatusEnum {
    ACTIVE("active"),
    
    ARCHIVED("archived"),
    
    DEPRECATED("deprecated");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @Override
    @JsonValue
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }
  @JsonProperty("status")
  private StatusEnum status = null;

  public Price priceId(Long priceId) {
    this.priceId = priceId;
    return this;
  }

  /**
   * Get priceId
   * @return priceId
   **/
  @JsonProperty("priceId")
  @Schema(description = "")
  public Long getPriceId() {
    return priceId;
  }

  public void setPriceId(Long priceId) {
    this.priceId = priceId;
  }

  public Price priceCHF(BigDecimal priceCHF) {
    this.priceCHF = priceCHF;
    return this;
  }

  /**
   * Get priceCHF
   * @return priceCHF
   **/
  @JsonProperty("priceCHF")
  @Schema(example = "10.55", required = true, description = "")
  @NotNull
  @Valid
  public BigDecimal getPriceCHF() {
    return priceCHF;
  }

  public void setPriceCHF(BigDecimal priceCHF) {
    this.priceCHF = priceCHF;
  }

  public Price priceEUR(BigDecimal priceEUR) {
    this.priceEUR = priceEUR;
    return this;
  }

  /**
   * Get priceEUR
   * @return priceEUR
   **/
  @JsonProperty("priceEUR")
  @Schema(example = "9.99", required = true, description = "")
  @NotNull
  @Valid
  public BigDecimal getPriceEUR() {
    return priceEUR;
  }

  public void setPriceEUR(BigDecimal priceEUR) {
    this.priceEUR = priceEUR;
  }

  public Price comment(String comment) {
    this.comment = comment;
    return this;
  }

  /**
   * Get comment
   * @return comment
   **/
  @JsonProperty("comment")
  @Schema(example = "default price for 10x15", required = true, description = "")
  @NotNull
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }

  public Price status(StatusEnum status) {
    this.status = status;
    return this;
  }

  /**
   * status of this price object (not used yet)
   * @return status
   **/
  @JsonProperty("status")
  @Schema(required = true, description = "status of this price object (not used yet)")
  @NotNull
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Price price = (Price) o;
    return Objects.equals(this.priceId, price.priceId) &&
        Objects.equals(this.priceCHF, price.priceCHF) &&
        Objects.equals(this.priceEUR, price.priceEUR) &&
        Objects.equals(this.comment, price.comment) &&
        Objects.equals(this.status, price.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(priceId, priceCHF, priceEUR, comment, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Price {\n");
    
    sb.append("    priceId: ").append(toIndentedString(priceId)).append("\n");
    sb.append("    priceCHF: ").append(toIndentedString(priceCHF)).append("\n");
    sb.append("    priceEUR: ").append(toIndentedString(priceEUR)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

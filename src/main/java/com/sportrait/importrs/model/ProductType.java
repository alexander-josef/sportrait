/*
 * Sportrait Import API
 * Initial Sportrait Import API description - an API to process events and photo imports on the Sportrait Server 
 *
 * OpenAPI spec version: 0.0.1
 * Contact: info@sportrait.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.sportrait.importrs.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * Represents a product type that can be combined with a price and added as a product for an album
 */
@Schema(description = "Represents a product type that can be combined with a price and added as a product for an album")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaJerseyServerCodegen", date = "2020-11-22T14:33:43.658Z[GMT]")public class ProductType   {
  @JsonProperty("productTypeId")
  private Long productTypeId = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("digitalProduct")
  private Boolean digitalProduct = null;

  @JsonProperty("prices")
  private List<Price> prices = new ArrayList<Price>();

  public ProductType productTypeId(Long productTypeId) {
    this.productTypeId = productTypeId;
    return this;
  }

  /**
   * Get productTypeId
   * @return productTypeId
   **/
  @JsonProperty("productTypeId")
  @Schema(description = "")
  public Long getProductTypeId() {
    return productTypeId;
  }

  public void setProductTypeId(Long productTypeId) {
    this.productTypeId = productTypeId;
  }

  public ProductType name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   **/
  @JsonProperty("name")
  @Schema(example = "10x15cm or \\\"digital master\\\"", required = true, description = "")
  @NotNull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ProductType description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   **/
  @JsonProperty("description")
  @Schema(example = "10x15cm Print", required = true, description = "")
  @NotNull
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ProductType digitalProduct(Boolean digitalProduct) {
    this.digitalProduct = digitalProduct;
    return this;
  }

  /**
   * true for digital (not physical) product
   * @return digitalProduct
   **/
  @JsonProperty("digitalProduct")
  @Schema(required = true, description = "true for digital (not physical) product")
  @NotNull
  public Boolean isDigitalProduct() {
    return digitalProduct;
  }

  public void setDigitalProduct(Boolean digitalProduct) {
    this.digitalProduct = digitalProduct;
  }

  public ProductType prices(List<Price> prices) {
    this.prices = prices;
    return this;
  }

  public ProductType addPricesItem(Price pricesItem) {
    this.prices.add(pricesItem);
    return this;
  }

  /**
   * Get prices
   * @return prices
   **/
  @JsonProperty("prices")
  @Schema(required = true, description = "")
  @NotNull
  @Valid
  public List<Price> getPrices() {
    return prices;
  }

  public void setPrices(List<Price> prices) {
    this.prices = prices;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProductType productType = (ProductType) o;
    return Objects.equals(this.productTypeId, productType.productTypeId) &&
        Objects.equals(this.name, productType.name) &&
        Objects.equals(this.description, productType.description) &&
        Objects.equals(this.digitalProduct, productType.digitalProduct) &&
        Objects.equals(this.prices, productType.prices);
  }

  @Override
  public int hashCode() {
    return Objects.hash(productTypeId, name, description, digitalProduct, prices);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductType {\n");
    
    sb.append("    productTypeId: ").append(toIndentedString(productTypeId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    digitalProduct: ").append(toIndentedString(digitalProduct)).append("\n");
    sb.append("    prices: ").append(toIndentedString(prices)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

##
## Environment dependant filters configuration file
## Properties in appSettings.properties will be replaced by the values in this file
## IMPORTANT : DO NOT FORGET TO UPDATE appSettings.properties WHEN INTRODUCING NEW PROPERTIES HERE
##

# Environment of this installation: "dev" "int" or "prod"
environment=int

#
# Server Settings
server.httpPort=8888
server.httpsPort=443
server.enableSsl=true
# using 5432 to connect to postgres db server  (should be postgres db server on docker host)
server.dbConnectionString=jdbc:postgresql://docker.for.mac.localhost:5432/sportrait-int



# not used anymore with s3 storage
appSettings.fineImagesDirectory=/opt/DATA/sportrait/fine-images
appSettings.webImagesDocumentRoot=/opt/DATA/sportrait/web-images
appSettings.webImagesContext=web-images

# Used to run script on local fine image file resources (not used anymore with S3 storage)
appSettings.logosScriptPath=/Users/alexanderjosef/scripts/copyLogosComposite.sh

# Used when processing a single image on any storage provider
appSettings.logosOverlayPortraitFile=/Users/alexanderjosef/Pictures/work-folder-sportrait-images/sponsoren-logo-overlay/sola-sponsors-2015-portrait-120-percent.png
appSettings.logosOverlayLandscapeFile=/Users/alexanderjosef/Pictures/work-folder-sportrait-images/sponsoren-logo-overlay/sola-sponsors-2015-landscape-120-percent.png
appSettings.logoImageFile=/Users/alexanderjosef/Pictures/work-folder-sportrait-images/sponsoren-logo-overlay/sola-logo-upper-left.png
appSettings.sponsorBarFile=/Users/alexanderjosef/Pictures/work-folder-sportrait-images/sponsoren-logo-overlay/sola-sponsors-bar-bottom.png

# Logo montage not needed anymore after imgix:
appSettings.applyLogoOrWatermarkOnFineImage=false

# Sign key for imgix images as generated on imgix admin web site:
appSettings.imgixSignKey=6rTyMFEnEmuCmGg6
appSettings.imgixSignKey2=wG2EQ9waD2WZuQ4A

# File storage settings / Amazon Web Services (S3) Settings
# Different buckets for prod, int (hosted on aws), and dev (local) - distinguished by prefix
fileStorageSettings.awsS3BucketNameFrankfurt=int.photos.sportrait.com
fileStorageSettings.awsS3BucketNameIreland=int.ireland.photos.sportrait.com
fileStorageSettings.fileStorageProviderImplementation = ch.unartig.studioserver.storageProvider.AwsS3FileStorageProvider
# Options: LocalFileSystemStorageProvider or AwsS3FileStorageProvider


# SMPT-server to be used for the confirmation emails. Currently no authentication possible.
appSettings.mailHost=localhost
#appSettings.mailHost=vm2.unartig.ch

##
## Colorplaza Settings
##

# Set this flag to true if all sent orders will only contact the colorplaza demo account
appSettings.colorplaza.demoOrder=true
# Set this to true to enable the automatic color correction algorithm of colorplaza. "true" of "false"; use "true"
appSettings.colorplaza.oipsColorcorrection=true
# Flag for simulating order only. "true" or "false"; "true" if the colorplaza won't be contacted when orders are processed
appSettings.simulateOrderOnly=true

##
## Hibernate Settings
##
hibernate.showSQL=true

##
## Logging
## (make sure the appropriate tomcat logging location is known)

unartig.loglevel=INFO
logging.folder=/usr/local/tomcat/logs
hibernate.loglevel=INFO

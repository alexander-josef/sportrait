<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">


<!-- why do we need the parent?

    going to update maven

-->

    <modelVersion>4.0.0</modelVersion>
    <groupId>ch.unartig.server</groupId>
    <artifactId>sportrait_web</artifactId>
    <packaging>war</packaging>

    <version>${revision}</version>

    <properties>
        <!-- Sane default when no revision property is passed in from the commandline -->
        <revision>0-SNAPSHOT</revision>
        <maven.javadoc.failOnError>false</maven.javadoc.failOnError>

    </properties>

    <!--<version>1.8.0-SNAPSHOT</version>-->

    <name>sportrait Server</name>
    <url>https://sportrait.com</url>



    <!-- new section to manage AWS dependencies (ensure right version of aws dependencies for each module) -->

    <!-- later ... needs a pom with modules. dependency management is declared in parent pom

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>bom</artifactId>
                <version>2.4.8</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>


        </dependencies>
    </dependencyManagement>

-->
    <dependencies>


        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-s3</artifactId>
            <version>1.11.500</version>
        </dependency>

<!--
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>rekognition</artifactId>
            <version>2.4.8</version>
        </dependency>
-->

        <!--or rather this dependency ? -->


        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-rekognition</artifactId>
            <version>1.11.500</version>
        </dependency>


        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-sqs</artifactId>
            <version>1.11.500</version>
        </dependency>

        <!-- Removing SPORTrait client dependency-->

        <!--ZK-->

        <dependency>
            <groupId>org.zkoss.zk</groupId>
            <artifactId>zhtml</artifactId>
            <version>3.0.7</version>
        </dependency>

        <dependency>
            <groupId>org.zkoss.zk</groupId>
            <artifactId>zk</artifactId>
            <version>3.0.7</version>
        </dependency>

        <dependency>
            <groupId>org.zkoss.zk</groupId>
            <artifactId>zkplus</artifactId>
            <version>3.0.7</version>
        </dependency>

        <dependency>
            <groupId>org.zkoss.zk</groupId>
            <artifactId>zul</artifactId>
            <version>3.0.7</version>
        </dependency>

        <dependency>
            <groupId>org.zkoss.common</groupId>
            <artifactId>zcommon</artifactId>
            <version>3.0.7</version>
        </dependency>
        <dependency>
            <groupId>org.zkoss.common</groupId>
            <artifactId>zweb</artifactId>
            <version>3.0.7</version>
        </dependency>

        <dependency>
            <groupId>org.zkoss.zkforge.el</groupId>
            <artifactId>zcommons-el</artifactId>
            <version>1.0.1</version>
        </dependency>

        <dependency>
            <groupId>org.beanshell</groupId>
            <artifactId>bsh</artifactId>
            <version>2.0b4</version>
        </dependency>

        <!--ZK END  -->

        <!--removing apache xmlrpc-->

        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>mail</artifactId>
            <version>1.4</version>
        </dependency>

        <dependency>
            <groupId>sslext</groupId>
            <artifactId>sslext</artifactId>
            <version>1.2-0</version>
        </dependency>


        <!-- removed all JAI dependencies ... not necessary anymore with image service (imgix) and metadata extractor-->


        <!-- upgrading from 1.1.2 -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>1.2</version>
        </dependency>

        <dependency>
            <groupId>taglibs</groupId>
            <artifactId>standard</artifactId>
            <version>1.1.2</version>
        </dependency>


        <dependency>
            <groupId>commons-httpclient</groupId>
            <artifactId>commons-httpclient</artifactId>
            <version>3.1</version>
        </dependency>

        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>1.2</version>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>1.3</version>
        </dependency>

        <!-- Version problem with struts ???-->
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <version>1.7.0</version>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.5</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.14</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>3.8.1</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>5.4.2.Final</version>
        </dependency>

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-ehcache</artifactId>
            <version>5.4.2.Final</version>
        </dependency>

        <dependency>
            <groupId>struts</groupId>
            <artifactId>struts</artifactId>
            <version>1.2.9</version>
        </dependency>


        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>5.5</version>
            <classifier>jdk15</classifier>
            <optional>true</optional>
            <scope>test</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.paypal.sdk/paypal-core -->
        <dependency>
            <groupId>com.paypal.sdk</groupId>
            <artifactId>paypal-core</artifactId>
            <version>1.7.2</version>
        </dependency>


        <!-- use imgscalr to create thumb and display images -->
        <dependency>
            <groupId>org.imgscalr</groupId>
            <artifactId>imgscalr-lib</artifactId>
            <version>4.2</version>
            <type>jar</type>
            <scope>compile</scope>
        </dependency>

        <!-- removed version - now managed with BOM dependency management, see top of file 2019-02-16 -->



        <!-- https://mvnrepository.com/artifact/com.google.api-client/google-api-client -->
        <dependency>
            <groupId>com.google.api-client</groupId>
            <artifactId>google-api-client</artifactId>
            <version>1.23.0</version>
            <exclusions>
                <exclusion>
                    <artifactId>jackson-core</artifactId>
                    <groupId>com.fasterxml.jackson.core</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>com.drewnoakes</groupId>
            <artifactId>metadata-extractor</artifactId>
            <version>2.11.0</version>
        </dependency>

        <dependency>
            <groupId>com.imgix</groupId>
            <artifactId>imgix-java</artifactId>
            <version>1.1.12</version>
        </dependency>


    </dependencies>


    <build>

        <!--<finalName>ROOT</finalName>-->
        <filters>
            <filter>src/main/filters/${appConfigFilterFile}</filter>
        </filters>

        <!-- enable filtering, but exclude the images-->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <excludes>
                    <exclude>images/**</exclude>
                </excludes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>images/**</include>
                </includes>
            </resource>
        </resources>


        <plugins>




            <!--#########################################################################################-->
            <!-- Removed Plugin configuation: Unpack the client artifact to a location where it can be accessed as an applet-->
            <!--#########################################################################################-->

            <!-- codehouse repo removed-->

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>hibernate3-maven-plugin</artifactId>
                <version>2.2</version>

                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>hbm2java</goal>
                        </goals>
                    </execution>
                </executions>


                <configuration>
                    <components>
                        <!--change generated-sources directory -->
                        <component>
                            <name>hbm2java</name>
                            <outputDirectory>target/generated-sources/hibernate-plugin/</outputDirectory>
                        </component>
                    </components>


                    <!-- Set the schema name -->
                    <componentProperties>

                        <export>false</export>
                        <format>true</format>
                        <outputfilename>schema-${project.version}.sql</outputfilename>
                        <propertyfile>/src/main/resources/hibernate.postgresql.properties</propertyfile>
                    </componentProperties>

                    <hibernate>
                        <propertyfile>/src/main/resources/hibernate.postgresql.properties</propertyfile>
                        <configurationFile>/src/main/resources/hibernate.cfg.xml</configurationFile>
                    </hibernate>

                </configuration>

            </plugin>


            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <!--<warName>ROOT</warName>-->

                    <webResources>
                        <!--configuration of filtered resources in webapp/WEB-INF: -->
                        <resource>
                            <directory>src/main/webapp</directory>
                            <filtering>true</filtering>
                            <includes>
                                <include>WEB-INF/struts-config.xml</include>
                                <include>META-INF/context.xml</include>
                            </includes>
                        </resource>
                    </webResources>

                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-scm-plugin</artifactId>
                <version>1.9.4</version>
                <configuration>
                    <tag>${project.artifactId}-${project.version}</tag>
                </configuration>
            </plugin>
        </plugins>

        <extensions>
            <!-- why do we need this? -->
<!--

            <extension>
                <groupId>postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>8.1-407.jdbc3</version>
            </extension>
-->
            <!--inserted after scpexe command didn't work anymore-->
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-ssh-external</artifactId>
                <version>2.8</version>
            </extension>
        </extensions>
    </build>


    <profiles>
        <profile>
            <id>dev-local</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <appConfigFilterFile>customSettings.properties</appConfigFilterFile>
            </properties>
        </profile>


        <!-- disable doclint when compiling with java jdk1.8  // not needed anymore ???-->
<!--

        <profile>
            <id>doclint-java8-disable</id>
            <activation>
                <jdk>[1.8,)</jdk>
            </activation>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <configuration>
                            <additionalparam>-Xdoclint:none</additionalparam>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

-->
        <profile>
            <id>prod</id>
            <build>

                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-war-plugin</artifactId>
                        <configuration>
                            <warName>ROOT_PROD</warName>
                        </configuration>
                    </plugin>

                </plugins>
            </build>
            <properties>
                <appConfigFilterFile>prod.properties</appConfigFilterFile>
            </properties>
        </profile>

        <!-- Use this profile for testing on aws3 -->
        <profile>
            <id>test</id>
            <build>

                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-war-plugin</artifactId>
                        <configuration>
                            <warName>ROOT_Test</warName>
                        </configuration>
                    </plugin>

                </plugins>
            </build>
            <properties>
                <appConfigFilterFile>test.properties</appConfigFilterFile>
            </properties>
        </profile>






    </profiles>


    <repositories>


        <!-- TODO change this to an https repository; see google bookmarks 'maven'-->
        <repository>
            <id>http-repo</id>
            <name>unArtig maven2 repo</name>
            <url>http://maven.unartig.ch/maven2</url>
            <releases>
                <checksumPolicy>warn</checksumPolicy>
            </releases>
        </repository>

<!-- adding jcenter repository for imgix dependencies -->
        <repository>
            <id>jcenter</id>
            <url>https://jcenter.bintray.com/</url>
        </repository>


    </repositories>


<!-- removing plugin repositories -->



    <scm>
        <url>https://github.com/alexander-josef/sportrait</url>
        <connection>scm:git:https://github.com/alexander-josef/sportrait.git</connection>
        <tag>HEAD</tag>
    </scm>



    <distributionManagement>
        <!-- use the following if you're not using a snapshot version. -->
        <!-- the authentication settings can be put to settings.xml (in [your homedir]/.m2/settings.xml) -->
        <!-- updated 2015-07 to accommodate the new location of the maven2 repo on aws2.sportrait.com -->
        <!-- an example is documented in evernote-->

        <repository>
            <id>ssh-mvn-repo</id>
            <name>sportrait m2 repo</name>
            <url>scpexe://aws2.sportrait.com/opt/maven2/repo</url>
        </repository>
        <!-- use the following if you ARE using a snapshot version . -->
        <snapshotRepository>
            <id>ssh-mvn-repo</id>
            <name>sportrait m2 snapshot repo</name>
            <url>scpexe://aws2.sportrait.com/opt/maven2/repo</url>
        </snapshotRepository>
    </distributionManagement>

</project>
